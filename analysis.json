{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`number-input` is an element that can:\n* prevent non numeric input\n* guarantee **live**-data to be valid\n* pad a value with `0` (to a specific length)\n* size the input (according to it's length)\n* overflow to minimum or underflow to maximum\n* saturate to minimum or to maximum\n* display a specified unit and size the input\n* specify the decimal separator (the value will still be a Number object)\n\nExample:\n```html\n<number-input step=\"2\" min=\"-20\" max=\"140\" pad-length=\"2\"></number-input>\n```\n\nIt sizes automatically. Use `key-up` and `key-down` to increment the value. If `step` is given, the value is a **multiple** of `step`.\n\n### Styling\nCustom property                  | Description                            | Default\n---------------------------------|----------------------------------------|--------------------\n`--number-input`                 | style of the input                     | {}\n`--number-input-focus`           | style of the focussed and hovered input | {}\n`--number-input-placeholder`     | style of the placeholder               | {}\n\n```css\n:host {\n  --number-input-focus: {\n    background: rgba(0,0,0,.25);\n  };\n  --number-input-placeholder: {\n    color: pink;\n  };\n}\n```",
      "summary": "",
      "path": "number-input.html",
      "properties": [
        {
          "name": "min",
          "type": "number",
          "description": "minimal input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 17,
              "column": 10
            },
            "end": {
              "line": 19,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "max",
          "type": "number",
          "description": "maximal input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "step",
          "type": "number",
          "description": "step for changing the input (referencing to `min` or `0`)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "saturate",
          "type": "boolean",
          "description": "if true, the value does not revolve the range according to the maximum or the minimum",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "padLength",
          "type": "number",
          "description": "length to pad the string (with `0`) according to the total amount of numbers",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 87,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "placeholder string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 10
            },
            "end": {
              "line": 104,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "noAutoWidth",
          "type": "boolean",
          "description": "disable autosizing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 10
            },
            "end": {
              "line": 114,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noAutoWidthChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "autoPadding",
          "type": "boolean",
          "description": "enables auto padding",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "valueString",
          "type": "string",
          "description": "value string of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 132,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueStringChanged\""
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "unit",
          "type": "string",
          "description": "unit of the value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 10
            },
            "end": {
              "line": 141,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_checkInput\""
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale to set the decimal-separator automatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 10
            },
            "end": {
              "line": 150,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "alwaysSign",
          "type": "string",
          "description": "always put the sign in the beginning",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 10
            },
            "end": {
              "line": 166,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "minimumFractionDigits",
          "type": "number",
          "description": "minimum digits right to the decimal separator",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 10
            },
            "end": {
              "line": 175,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "minimumIntegerDigits",
          "type": "number",
          "description": "minimum digits left to the decimal separator",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_longestStatic",
          "type": "number",
          "description": "longest number-string of the given range",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_regExpDecimalSeparator",
          "type": "RegExp",
          "description": "regular expression to detect the decimal separator",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 10
            },
            "end": {
              "line": 202,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_regExpNotInNumber",
          "type": "RegExp",
          "description": "regular expression to parse the numeric parts of a number string",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 10
            },
            "end": {
              "line": 211,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "NumberInputMixin"
        }
      ],
      "methods": [
        {
          "name": "_minMaxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_checkValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_updateValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_checkStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "step"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_safeMult",
          "description": "emulating handwritten multiplication",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "[number]",
              "description": "[factor]"
            },
            {
              "name": "b",
              "type": "[number]",
              "description": "[factor]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[product]"
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_safeAdd",
          "description": "emulating handwritten addition",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "[number]",
              "description": "[summand]"
            },
            {
              "name": "b",
              "type": "[number]",
              "description": "[summand]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[sum]"
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeMinimumFractionDigits",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeMinimumIntegerDigits",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 249,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoPadding"
            },
            {
              "name": "padLength"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            },
            {
              "name": "minimumFractionDigits"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computePadding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 6
            },
            "end": {
              "line": 255,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoPadding"
            },
            {
              "name": "minimumIntegerDigits"
            },
            {
              "name": "minimumFractionDigits"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeLongestStatic",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 6
            },
            "end": {
              "line": 261,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            },
            {
              "name": "max"
            },
            {
              "name": "placeholder"
            },
            {
              "name": "minimumIntegerDigits"
            },
            {
              "name": "minimumFractionDigits"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeRegExpDecimalSeparator",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 6
            },
            "end": {
              "line": 265,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "decimalSeparator"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeRegExpNotInNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 6
            },
            "end": {
              "line": 269,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "decimalSeparator"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_checkInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 6
            },
            "end": {
              "line": 273,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_valueStringChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 6
            },
            "end": {
              "line": 298,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            },
            {
              "name": "oldValueString"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 364,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 6
            },
            "end": {
              "line": 371,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_updateView",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 6
            },
            "end": {
              "line": 377,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_debouncedComputeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 6
            },
            "end": {
              "line": 384,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 386,
              "column": 6
            },
            "end": {
              "line": 403,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_noAutoWidthChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 405,
              "column": 6
            },
            "end": {
              "line": 413,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noAutoWidth"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "focus",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 6
            },
            "end": {
              "line": 430,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "blur",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "formatNumber",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 6
            },
            "end": {
              "line": 466,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 515,
          "column": 4
        },
        "end": {
          "line": 520,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "NumberInput",
      "attributes": [
        {
          "name": "min",
          "description": "minimal input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 17,
              "column": 10
            },
            "end": {
              "line": 19,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "max",
          "description": "maximal input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "step",
          "description": "step for changing the input (referencing to `min` or `0`)",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "saturate",
          "description": "if true, the value does not revolve the range according to the maximum or the minimum",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "pad-length",
          "description": "length to pad the string (with `0`) according to the total amount of numbers",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 87,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "placeholder",
          "description": "placeholder string",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 10
            },
            "end": {
              "line": 104,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "no-auto-width",
          "description": "disable autosizing",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 10
            },
            "end": {
              "line": 114,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "auto-padding",
          "description": "enables auto padding",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "value-string",
          "description": "value string of the input",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 132,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "unit",
          "description": "unit of the value",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 10
            },
            "end": {
              "line": 141,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "locale",
          "description": "The current locale to set the decimal-separator automatically",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 10
            },
            "end": {
              "line": 150,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "decimal-separator",
          "description": "Separator for local decimal values",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "always-sign",
          "description": "always put the sign in the beginning",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 10
            },
            "end": {
              "line": 166,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "minimum-fraction-digits",
          "description": "minimum digits right to the decimal separator",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 10
            },
            "end": {
              "line": 175,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "minimum-integer-digits",
          "description": "minimum digits left to the decimal separator",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "NumberInputMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "number-input",
      "mixins": [
        "NumberInputMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "mixin to create a number-input",
      "summary": "",
      "path": "number-input.html",
      "properties": [
        {
          "name": "min",
          "type": "number",
          "description": "minimal input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 17,
              "column": 10
            },
            "end": {
              "line": 19,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "max",
          "type": "number",
          "description": "maximal input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "step",
          "type": "number",
          "description": "step for changing the input (referencing to `min` or `0`)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "saturate",
          "type": "boolean",
          "description": "if true, the value does not revolve the range according to the maximum or the minimum",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "padLength",
          "type": "number",
          "description": "length to pad the string (with `0`) according to the total amount of numbers",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 87,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "placeholder string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 10
            },
            "end": {
              "line": 104,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "noAutoWidth",
          "type": "boolean",
          "description": "disable autosizing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 10
            },
            "end": {
              "line": 114,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noAutoWidthChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "autoPadding",
          "type": "boolean",
          "description": "enables auto padding",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "valueString",
          "type": "string",
          "description": "value string of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 132,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueStringChanged\""
            }
          }
        },
        {
          "name": "unit",
          "type": "string",
          "description": "unit of the value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 10
            },
            "end": {
              "line": 141,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_checkInput\""
            }
          }
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale to set the decimal-separator automatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 10
            },
            "end": {
              "line": 150,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          }
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "alwaysSign",
          "type": "string",
          "description": "always put the sign in the beginning",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 10
            },
            "end": {
              "line": 166,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "minimumFractionDigits",
          "type": "number",
          "description": "minimum digits right to the decimal separator",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 10
            },
            "end": {
              "line": 175,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "minimumIntegerDigits",
          "type": "number",
          "description": "minimum digits left to the decimal separator",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_longestStatic",
          "type": "number",
          "description": "longest number-string of the given range",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 10
            },
            "end": {
              "line": 193,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_regExpDecimalSeparator",
          "type": "RegExp",
          "description": "regular expression to detect the decimal separator",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 10
            },
            "end": {
              "line": 202,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_regExpNotInNumber",
          "type": "RegExp",
          "description": "regular expression to parse the numeric parts of a number string",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 10
            },
            "end": {
              "line": 211,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_minMaxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 6
            },
            "end": {
              "line": 317,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ]
        },
        {
          "name": "_checkValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 83,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_updateValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_checkStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "step"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_safeMult",
          "description": "emulating handwritten multiplication",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "[number]",
              "description": "[factor]"
            },
            {
              "name": "b",
              "type": "[number]",
              "description": "[factor]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[product]"
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_safeAdd",
          "description": "emulating handwritten addition",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 168,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "[number]",
              "description": "[summand]"
            },
            {
              "name": "b",
              "type": "[number]",
              "description": "[summand]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[sum]"
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 232,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeMinimumFractionDigits",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ]
        },
        {
          "name": "_computeMinimumIntegerDigits",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 249,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoPadding"
            },
            {
              "name": "padLength"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            },
            {
              "name": "minimumFractionDigits"
            }
          ]
        },
        {
          "name": "_computePadding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 6
            },
            "end": {
              "line": 255,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoPadding"
            },
            {
              "name": "minimumIntegerDigits"
            },
            {
              "name": "minimumFractionDigits"
            }
          ]
        },
        {
          "name": "_computeLongestStatic",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 6
            },
            "end": {
              "line": 261,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            },
            {
              "name": "max"
            },
            {
              "name": "placeholder"
            },
            {
              "name": "minimumIntegerDigits"
            },
            {
              "name": "minimumFractionDigits"
            }
          ]
        },
        {
          "name": "_computeRegExpDecimalSeparator",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 6
            },
            "end": {
              "line": 265,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "decimalSeparator"
            }
          ]
        },
        {
          "name": "_computeRegExpNotInNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 6
            },
            "end": {
              "line": 269,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "decimalSeparator"
            }
          ]
        },
        {
          "name": "_checkInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 6
            },
            "end": {
              "line": 273,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_valueStringChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 6
            },
            "end": {
              "line": 298,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            },
            {
              "name": "oldValueString"
            }
          ]
        },
        {
          "name": "_checkKeycode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ]
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 6
            },
            "end": {
              "line": 364,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 6
            },
            "end": {
              "line": 371,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ]
        },
        {
          "name": "_updateView",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 6
            },
            "end": {
              "line": 377,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ]
        },
        {
          "name": "_debouncedComputeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 6
            },
            "end": {
              "line": 384,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            }
          ]
        },
        {
          "name": "_computeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 386,
              "column": 6
            },
            "end": {
              "line": 403,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            }
          ]
        },
        {
          "name": "_noAutoWidthChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 405,
              "column": 6
            },
            "end": {
              "line": 413,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noAutoWidth"
            }
          ]
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ]
        },
        {
          "name": "focus",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 6
            },
            "end": {
              "line": 430,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "blur",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "formatNumber",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 6
            },
            "end": {
              "line": 466,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 2
        },
        "end": {
          "line": 468,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "NumberInputMixin",
      "attributes": [
        {
          "name": "min",
          "description": "minimal input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 17,
              "column": 10
            },
            "end": {
              "line": 19,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "max",
          "description": "maximal input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "step",
          "description": "step for changing the input (referencing to `min` or `0`)",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 40,
              "column": 10
            },
            "end": {
              "line": 44,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "saturate",
          "description": "if true, the value does not revolve the range according to the maximum or the minimum",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 52,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "pad-length",
          "description": "length to pad the string (with `0`) according to the total amount of numbers",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 10
            },
            "end": {
              "line": 87,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "placeholder",
          "description": "placeholder string",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 10
            },
            "end": {
              "line": 95,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 10
            },
            "end": {
              "line": 104,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-auto-width",
          "description": "disable autosizing",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 10
            },
            "end": {
              "line": 114,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "auto-padding",
          "description": "enables auto padding",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "value-string",
          "description": "value string of the input",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 132,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "unit",
          "description": "unit of the value",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 10
            },
            "end": {
              "line": 141,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "locale",
          "description": "The current locale to set the decimal-separator automatically",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 10
            },
            "end": {
              "line": 150,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "decimal-separator",
          "description": "Separator for local decimal values",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "always-sign",
          "description": "always put the sign in the beginning",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 10
            },
            "end": {
              "line": 166,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "minimum-fraction-digits",
          "description": "minimum digits right to the decimal separator",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 10
            },
            "end": {
              "line": 175,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "minimum-integer-digits",
          "description": "minimum digits left to the decimal separator",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 10
            },
            "end": {
              "line": 184,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "RangeMixin"
      ]
    }
  ]
}
